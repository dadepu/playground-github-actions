name: Master CD-Workflow

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: JDK + Maven
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          java-package: jdk
          cache: maven

      - name: Build
        run: mvn clean package -DskipTests

      - name: Push Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./target/*.jar
          retention-days: 1

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.3
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 8080:8080

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: JDK + Maven
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          java-package: jdk
          cache: maven

      - name: Run Tests
        run: mvn test

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          sparse-checkout: |
            Dockerfile

      - name: Download Jar
        uses: actions/download-artifact@v3
        id: artifact-download
        with:
          name: build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USER }}/github:latest
          build-args: |
            JAR_INPUT_DIR=.



